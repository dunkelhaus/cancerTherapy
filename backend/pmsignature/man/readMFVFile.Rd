% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readFile.R
\name{readMFVFile}
\alias{readMFVFile}
\title{Read the raw mutation data with the mutation feature vector format.}
\usage{
readMFVFile(infile, numBases = 3, trDir = FALSE, type = "custom")
}
\arguments{
\item{infile}{the path for the input file for the mutation feature data.}

\item{numBases}{the number of upstream and downstream flanking bases
(including the mutated base) to take into account.}

\item{trDir}{the index representing whether transcription direction is considered or not.}

\item{type}{this argument can take either "independent", "full", or "custom".
The values "independent" or "full" can be set only when the input file is decently formatted.}
}
\description{
The mutation feature vector format is tab-delimited format, 
where the 1st column shows the name of samples, and the 2nd-last columns show the values of mutation features.

When type = "independent", the mutation feature should be equal to \code{(numBases + as.integer(trDir))}-dimensional vector,
representing substitution patterns (1 to 6, C>A, C>G, C>T, T>A, T>C and T>G), 
5' and 3' flanking bases (1 to 4, A, C, G and T),
and transcription direction (1 to 2, + and -), in this order.

When type = "full", the mutation feature should be equal to \code{1}-dimensional vector,
taking the value of 1 to \code{6 * 4^{(numBases - 1)} * 2^{as.integer(trDir)}}.
For the coding of the number to the actual mutation pattern (substitution patterns, flanking bases, transcription direction),
seeing the source code of \code{getMutationFeatureVector} may be helpful.

Also, this function usually can accept compressed files (e.g., by gzip, bzip2 and so on) when using recent version of R.
}
\examples{
We have example data in the pmsignature package;
inputFile <- system.file("extdata/Hoang_MFVF.ind.txt", package="pmsignature")
G <- readMFVFile(inputFile, numBases = 5, type="independent", trDir=TRUE)

}

