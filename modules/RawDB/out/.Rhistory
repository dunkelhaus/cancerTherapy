install.packages("caret")
install.packages("sqldf")
library(ROCR)
install.packages("ROCR")
q()
getwd()
setwd("/home/skjena/cancerTherapy/backend/out")
getwd()
require(sqldf)
f <- file("occurence.csv")
system.time(SQLf <- sqldf("select * from f", dbname = tempfile(),
                          file.format = list(header = T, row.names = F)))
system.time(SQLf <- sqldf("select * from f", dbname = tempfile(), file.format = list(header = T, row.names = F))
)
SQLf
require(caret)
describe("SQLf")
require(RCurl)
require(prettyR)
install.packages("psych")
describe("SQLf")
library(psych)
library('psych')
describe("SQLf")
psych::describe(SQLf)
psych::describe('SQLf')
SQLf <- sqldf("select * from f", dbname = tempfile(), file.format = list(header = T, row.names = F))
type(SQLf)
 print(object.size(SQLf), units="Mb")
df_train <- read.table("occurence.csv", sep=",", header=TRUE)
describe(df_train)
psych::describe(df_train)
seed <- 1809
set.seed(seed)
require('caret')
cv_splits <- createFolds(df_train, k=10, returnTrain = TRUE)
str(cv_splits)
cv_splits
head(df_train)
df_train <- read.table("occurence.csv", sep=",", header=false)
df_train <- read.table("occurence.csv", sep=",", header=FALSE)
head(df_train)
df_train <- read.table("occurence.csv", sep=",", header=TRUE)
train_index <- createDataPartition(iris$Species,
                                   p = 0.8,
                                   list = FALSE,
train_index <- createDataPartition(df_train, p=0.8, list= FALSE, times = 10)
head(df_train)
group_folds <- groupKFold(df_train, k=10)
train_control <- trainControl(df_train,method="cv", number=10)
train_control
folds <- createFolds(df_train)
str(folds)
?createFolds
groupKFold(group, k = 5))
groupKFold(group, k = 5)
groupKFold(df_train, k = 5)
?createFolds
 createFolds(df_train, k = 10, list = TRUE, returnTrain = FALSE)
dim(df_train)
str(folds)
$fold1
Fold1
$Fold1
set.seed(5)
rand <- sample(nrow(df_train))
K1row <- rand[rand %% 5 + 1 == 1]
K2row <- rand[rand %% 5 + 1 == 2]
K3row <- rand[rand %% 5 + 1 == 3]
K4row <- rand[rand %% 5 + 1 == 4]
K5row <- rand[rand %% 5 + 1 == 5]
K1row
K2row
rand <- sample(df_train))
rand <- sample(df_train)
K1row <- rand[rand %% 5 + 1 == 1]
folds <- createFolds(df_train)
train_index <- createDataPartition(df_train, list= FALSE, times = 10)
solution<-as.data.frame(table(unlist(df_train)))
train_index <- createDataPartition(df_train, list= FALSE, times = 10)
train_index <- createDataPartition(solutiom, list= FALSE, times = 10)
train_index <- createDataPartition(solution, list= FALSE, times = 10)
train_control <- trainControl(df_train,method="cv", number=10)
train_control 
train_control <- trainControl(df_train,method="cv", number=10, repeat =10)
train_control <- trainControl(df_train,method="cv", number=10, repeats =10)
train_control
fitControl <- trainControl(## 10-fold CV
                           method = "repeatedcv",
                           number = 10,
                           ## repeated ten times
                           repeats = 10)
fitControl
train_control <- trainControl(df_train,method="cv", number=10, repeats =10)
model(df_train
model <- train(Class ~., Sonar,
  method = "glm",
model <- train(df_train, trControl = train_control, model ="glm")
model <- train(df_train, trControl = train_control, model ="glm")
library(nnet)
library(caret)
library(datasets)
library(data.table)
install.packages('data.table')
library(data.table)
library(e1071)
r<- 10
k <-10
df <- data.table(df_train)
q()
